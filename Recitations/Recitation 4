Problem 1:
a) The frog can't reach the worm when the greatest common divisor of n and k is greater than 1. For example, if n = 2 and
k = 10, then the frog will never reach node 1, where the worm resides.
b) Let n = 10 and k = 3. Then we know that we can reach the worm when the frog jumps j times and hits a node with a value of n*i + 1, where 
i = the number of round trips and i > 0. 

jk = in + 1
-in + jk = 1

This is a linear combination of n and k, so we can use the pulverizer to calculate the number of jumps needed.

x y rem(x, y) = x - q * y
10 3 1          10 - 3 * 3 = 1
3 1 0           3 - 1 * 3 = 0 

gcd(10, 3) = 1
gcd(3, 1) = 0

So a total of 3 cycles and 1 additional jump is needed for a total of 10 jumps.

c)
n = 50, k = 21. The linear combination looks like 21j - 50i = 1.

x y rem(x, y) = x - q * y
50 21 8       50 - 21 * 2 = 8
21 8 5        21 - 8 * 2 = 5; 
              21 - (50 - 21 * 2) * 2 = 5;
              -2 * 50 + 5 * 21 = 5
8 5 3.        8 - 1 * 5 = 3;
              (50 - 21 * 2) - 1 * (50 * -2 + 21 * 5) = 3;
              50 * 3 - 21 * 7 = 3;
5 3 2         5 - 1 * 3 = 2;
              (50 * -2 + 21 * 5) - 1 * (50 * 3 - 21 * 7) = 2;
              50 * -5 + 21 * 12 = 2;
3 2 1         3 - 1 * 2 = 1;
              (50 * 3 - 21 * 7) - (50 * -5 + 21 * 12) = 1;
              8 * 50 - 19 * 21 = 1
2 1 0

i = -8, j = -19. 
i = 21 - 8 = 13, j = 50 - 19 = 31

21 * 31 - 50 * 13 = 1
